// Code generated by MockGen. DO NOT EDIT.
// Source: internal/domain/usecase/create_message.go

// Package mock_usecase is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/willchat-ofc/api-willchat-golang/internal/domain/models"
	usecase "github.com/willchat-ofc/api-willchat-golang/internal/domain/usecase"
)

// MockCreateMessage is a mock of CreateMessage interface.
type MockCreateMessage struct {
	ctrl     *gomock.Controller
	recorder *MockCreateMessageMockRecorder
}

// MockCreateMessageMockRecorder is the mock recorder for MockCreateMessage.
type MockCreateMessageMockRecorder struct {
	mock *MockCreateMessage
}

// NewMockCreateMessage creates a new mock instance.
func NewMockCreateMessage(ctrl *gomock.Controller) *MockCreateMessage {
	mock := &MockCreateMessage{ctrl: ctrl}
	mock.recorder = &MockCreateMessageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateMessage) EXPECT() *MockCreateMessageMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockCreateMessage) Create(data *usecase.CreateMessageInput) (*models.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", data)
	ret0, _ := ret[0].(*models.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockCreateMessageMockRecorder) Create(data interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCreateMessage)(nil).Create), data)
}
