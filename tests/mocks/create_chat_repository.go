// Code generated by MockGen. DO NOT EDIT.
// Source: internal/data/protocols/create_chat_repository.go

// Package mock_protocols is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	protocols "github.com/willchat-ofc/api-willchat-golang/internal/data/protocols"
)

// MockCreateChatRepository is a mock of CreateChatRepository interface.
type MockCreateChatRepository struct {
	ctrl     *gomock.Controller
	recorder *MockCreateChatRepositoryMockRecorder
}

// MockCreateChatRepositoryMockRecorder is the mock recorder for MockCreateChatRepository.
type MockCreateChatRepositoryMockRecorder struct {
	mock *MockCreateChatRepository
}

// NewMockCreateChatRepository creates a new mock instance.
func NewMockCreateChatRepository(ctrl *gomock.Controller) *MockCreateChatRepository {
	mock := &MockCreateChatRepository{ctrl: ctrl}
	mock.recorder = &MockCreateChatRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCreateChatRepository) EXPECT() *MockCreateChatRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockCreateChatRepository) Create(ownerId string) (*protocols.CreateChatRepositoryOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ownerId)
	ret0, _ := ret[0].(*protocols.CreateChatRepositoryOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockCreateChatRepositoryMockRecorder) Create(ownerId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCreateChatRepository)(nil).Create), ownerId)
}
